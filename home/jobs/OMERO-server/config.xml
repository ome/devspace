<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>PURGE_DATA</name>
          <description>Drops and creates the DB, cleans the binary repository</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>omero</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>OMERO_INSTALL=/tmp/omero-install/linux
source $OMERO_INSTALL/settings.env
OMERO_DB_NAME=$JOB_NAME
OMERO_DIST=$WORKSPACE/OMERO.server

if [ -e $OMERO_DIST ]; then
    if [ -e $WORKSPACE/omero-virtualenv ]; then
        source $WORKSPACE/omero-virtualenv/bin/activate
    fi
    $OMERO_DIST/bin/omero admin stop || echo First build
    sleep 5
    if [ -e $WORKSPACE/omero-virtualenv ]; then
        deactivate
    fi
fi


if [ &quot;$PURGE_DATA&quot; = &quot;true&quot; ]; then
    dropdb -h $OMERO_DB_HOST -U $OMERO_DB_USER $OMERO_DB_NAME || echo &quot;First run or already exists&quot;
else
    echo &quot;Skipping PURGE_DATA:CleanDbAndRepo&quot;
fi

rm -rf $WORKSPACE/*</command>
    </hudson.tasks.Shell>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.37">
      <project>OMERO-build</project>
      <filter>src/target/OMERO.server*zip</filter>
      <target></target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <flatten>true</flatten>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>OMERO_INSTALL=/tmp/omero-install/linux
source $OMERO_INSTALL/settings.env
OMERO_DB_NAME=$JOB_NAME
OMERO_DATA_DIR=$WORKSPACE/data

mkdir -p $OMERO_DATA_DIR

# UNZIP SERVER
OMERO_DIST=$WORKSPACE/OMERO.server

ZIP=$(ls OMERO.server*.zip)
DIST=${ZIP%.zip}
unzip $ZIP
rm -f $ZIP
mv $WORKSPACE/$DIST $OMERO_DIST

# CREATE VirtualEnv
virtualenv $WORKSPACE/omero-virtualenv --system-site-packages
source $WORKSPACE/omero-virtualenv/bin/activate

pip install omego

## LOAD CONFIG

# LOAD EXTRA CONFIG
#$OMERO_DIST/bin/omero load configfile.omero

# DEFAULT CONFIG
$OMERO_DIST/bin/omero config set omero.db.name $OMERO_DB_NAME
$OMERO_DIST/bin/omero config set omero.db.host $OMERO_DB_HOST
$OMERO_DIST/bin/omero config set omero.db.user $OMERO_DB_USER
$OMERO_DIST/bin/omero config set omero.data.dir $OMERO_DATA_DIR

## END LOAD CONFIG


## PURGE

if [ &quot;$PURGE_DATA&quot; = &quot;true&quot; ]; then
    createdb -h $OMERO_DB_HOST -U $OMERO_DB_USER $OMERO_DB_NAME
    omego db init --serverdir $OMERO_DIST --dbname $OMERO_DB_NAME
else
    echo &quot;Skipping PURGE_DATA:CleanDbAndRepo. Check for DB upgrade&quot;
    omego db upgrade --serverdir $OMERO_DIST --dbname $OMERO_DB_NAME
fi

## END PURGE

BUILD_ID=DONT_KILL_ME $OMERO_DIST/bin/omero admin start

# WAIT FOR OMERO TO START UP AND ACCEPT CONNECTIONS
$OMERO_DIST/bin/omero admin waitup

deactivate</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>