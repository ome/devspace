<?xml version="1.1" encoding="UTF-8" standalone="no"?><project>
  <actions/>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>PURGE_DATA</name>
          <description>Drops and creates the DB, cleans the binary repository</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DB_NAME</name>
          <description>Default is $JOB_NAME</description>
          <defaultValue>$JOB_NAME</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DATA_DIR</name>
          <description>Default is $HOME/omero-server-data</description>
          <defaultValue>$HOME/omero-server-data</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OMERO_SERVER_ZIP_URL</name>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>omero</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>source /home/settings.env
OMERO_DB_NAME=$DB_NAME
OMERO_DIST=$WORKSPACE/OMERO.server
export OMERODIR=$OMERO_DIST
OMERO_DATA_DIR=$DATA_DIR

if [ -e $OMERO_DIST ]; then
    source $WORKSPACE/.venv3/bin/activate
    omero admin stop || echo not running
    sleep 5
    deactivate
fi

rm -rf $WORKSPACE/.venv3
python3.11 -m venv $WORKSPACE/.venv3

if [ "$PURGE_DATA" = "true" ]; then
    dropdb -h $OMERO_DB_HOST -U $OMERO_DB_USER $OMERO_DB_NAME || echo "First run or already exists"
    rm -rf $OMERO_DATA_DIR
else
    echo "Skipping PURGE_DATA:CleanDbAndRepo"
fi

rm -rf $WORKSPACE/*  # Should leave .venv3</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@722.v0662a_9b_e22a_c">
      <project>OMERO-build</project>
      <filter>src/target/OMERO.server*zip</filter>
      <target/>
      <includeBuildNumberInTargetPath>false</includeBuildNumberInTargetPath>
      <excludes/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <flatten>true</flatten>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@722.v0662a_9b_e22a_c">
      <project>OMERO-python-superbuild-build</project>
      <filter>**/*.tar.gz</filter>
      <target/>
      <includeBuildNumberInTargetPath>false</includeBuildNumberInTargetPath>
      <excludes/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <flatten>true</flatten>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@722.v0662a_9b_e22a_c">
      <project>OMERO-build-build</project>
      <filter/>
      <target/>
      <includeBuildNumberInTargetPath>false</includeBuildNumberInTargetPath>
      <excludes/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <flatten>true</flatten>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>
source /home/settings.env
OMERO_DB_NAME=$DB_NAME
OMERO_DATA_DIR=$DATA_DIR

mkdir -p $OMERO_DATA_DIR

OMERO_DIST=$WORKSPACE/OMERO.server
export OMERODIR=$OMERO_DIST
export ZIP_FILE=$WORKSPACE/omero-blitz-VERSION-python.zip
export VERSION_PROPERTIES=$WORKSPACE/version.properties

ZIP=$(ls OMERO.server*.zip)
if [ ! -z "$OMERO_SERVER_ZIP_URL" ]
then
   rm -f $ZIP
   wget -q $OMERO_SERVER_ZIP_URL
   ZIP=$(basename $OMERO_SERVER_ZIP_URL)
fi
DIST=${ZIP%.zip}
unzip $ZIP
rm -f $ZIP
mv $WORKSPACE/$DIST $OMERO_DIST

source $WORKSPACE/.venv3/bin/activate

pip install -U pip
pip install https://github.com/glencoesoftware/zeroc-ice-py-linux-x86_64/releases/download/20240202/zeroc_ice-3.6.5-cp311-cp311-manylinux_2_28_x86_64.whl
pip install markdown
pip install reportlab # For figure
pip install omego
pip install tables
pip install jinja2
pip install omero-py

pip install git+https://github.com/$SPACE_USER/omero-metadata.git@$MERGE_PUSH_BRANCH#egg=omero-metadata
pip install git+https://github.com/$SPACE_USER/omero-cli-render.git@$MERGE_PUSH_BRANCH#egg=omero-cli-render
pip install git+https://github.com/$SPACE_USER/omero-cli-duplicate.git@$MERGE_PUSH_BRANCH#egg=omero-cli-duplicate
pip install omero-certificates

for x in *.tar.gz; do
    pip install -U $x # Install marshal, etc. *after* requirements
done

# Install figure script
wget https://raw.githubusercontent.com/$SPACE_USER/omero-figure/$MERGE_PUSH_BRANCH/omero_figure/scripts/omero/figure_scripts/Figure_To_Pdf.py
chmod 755 Figure_To_Pdf.py
mv Figure_To_Pdf.py $OMERO_DIST/lib/scripts/omero/figure_scripts

omero config set omero.db.name $OMERO_DB_NAME
omero config set omero.db.host $OMERO_DB_HOST
omero config set omero.db.user $OMERO_DB_USER
omero config set omero.data.dir $OMERO_DATA_DIR
omero config set omero.fs.repo.path "%user%_%userId%/%thread%//%year%-%month%/%day%/%time%"
omero config set omero.db.poolsize 25
omero config set omero.security.trustStore /etc/pki/ca-trust/extracted/java/cacerts
omero config set omero.security.trustStorePassword changeit
omero config set omero.mail.config true
omero config set omero.server.nodedescriptors master:Blitz-0,Indexer-0,Processor-0,Storm,Tables-0
omero config set omero.jvmcfg.append '--add-opens java.base/java.lang=ALL-UNNAMED --add-exports java.naming/com.sun.jndi.ldap=ALL-UNNAMED'

# omero config set omero.mail.from your_address
# omero config set omero.mail.host your_smtp_server_for_example
omero certificates

if [ "$PURGE_DATA" = "true" ]; then
    createdb -h $OMERO_DB_HOST -U $OMERO_DB_USER $OMERO_DB_NAME
    omego db init --serverdir $OMERO_DIST --dbname $OMERO_DB_NAME
else
    echo "Skipping PURGE_DATA:CleanDbAndRepo. Check for DB upgrade"
    omego db -vvv upgrade --serverdir $OMERO_DIST --dbname $OMERO_DB_NAME
fi

export LANG='en_US.UTF-8'
export LANGUAGE='en_US:en'
export LC_ALL='en_US.UTF-8'
BUILD_ID=DONT_KILL_ME omero admin start

omero admin waitup
omero admin diagnostics

deactivate
</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.26"/>
  </buildWrappers>
</project>