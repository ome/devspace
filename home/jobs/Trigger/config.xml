<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.31">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.6"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.6">
      <jobProperties/>
      <triggers/>
      <parameters>
        <string>STATUS</string>
      </parameters>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>STATUS</name>
          <description>scc status flag</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>success-only</string>
              <string>no-error</string>
              <string>none</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <hudson.triggers.TimerTrigger>
          <spec>H H(0-1) * * 1-7</spec>
        </hudson.triggers.TimerTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.64">
    <script>pipeline {
    agent any

    parameters {
        choice(choices: [&apos;success-only&apos;, &apos;no-error&apos;, &apos;none&apos;], description: &apos;scc status flag&apos;, name: &apos;STATUS&apos;)
    }

    stages {

        stage(&quot;Bio-Formats&quot;){
            steps {

                // build job: &apos;MANAGEMENT_TOOLS-merge&apos;
                // build job: &apos;DATA_REPO_CONFIG-merge&apos;
                build job: &apos;BIOFORMATS-push&apos;, parameters: [string(name: &apos;STATUS&apos;, value: &quot;${params.STATUS}&quot;)]
                build job: &apos;BIOFORMATS-image&apos;
                build job: &apos;BIOFORMATS-deploy&apos;
                build job: &apos;OME-MODEL-linkcheck&apos;, wait: false, propagate: false
                build job: &apos;BIOFORMATS-linkcheck&apos;, wait: false, propagate: false
                build job: &apos;BIOFORMATS-test-repo&apos;, wait: false, propagate: false
            }
        }

        stage(&apos;OMERO Jars&apos;) {
            steps {
                build job: &apos;OMERO-gradle-plugins-push&apos;, parameters: [string(name: &apos;STATUS&apos;, value: &quot;${params.STATUS}&quot;)]
                build job: &apos;OMERO-gradle-plugins-build&apos;
                build job: &apos;OMERO-build-push&apos;, parameters: [string(name: &apos;STATUS&apos;, value: &quot;${params.STATUS}&quot;)]
                build job: &apos;OMERO-build-build&apos;
            }
        }

        stage(&quot;OMERO Python&quot;) {
            steps {
                build job: &apos;OMERO-python-superbuild-push&apos;, parameters: [string(name: &apos;STATUS&apos;, value: &quot;${params.STATUS}&quot;)]
                build job: &apos;OMERO-python-superbuild-build&apos;
            }
        }

        stage(&apos;OMERO Distribution&apos;) {
            steps {
                build job: &apos;OMERO-push&apos;, parameters: [string(name: &apos;STATUS&apos;, value: &quot;${params.STATUS}&quot;)]
                build job: &apos;OMERO-build&apos;
            }
        }

        stage(&quot;OMERO Deploy&quot;) {
            steps {
                build job: &apos;OMERO-plugins-push&apos;, parameters: [string(name: &apos;STATUS&apos;, value: &quot;${params.STATUS}&quot;)]
                build job: &apos;OMERO-server&apos;
                build job: &apos;OMERO-web&apos;
                build job: &apos;nginx&apos;
            }
        }

        stage(&quot;OMERO Docs&quot;) {
            steps {
                build job: &apos;OMERO-docs&apos;, wait: false
                build job: &apos;OMERO-guides-push&apos;, wait: false
            }
        }

        stage(&apos;OMERO insight&apos;) {
            steps {
                build job: &apos;OMERO-insight-push&apos;, parameters: [string(name: &apos;STATUS&apos;, value: &quot;${params.STATUS}&quot;)]
                build job: &apos;OMERO-insight-build&apos;
            }
        }

        stage(&apos;OMERO Matlab&apos;) {
            steps {
                build job: &apos;OMERO-matlab-push&apos;, parameters: [string(name: &apos;STATUS&apos;, value: &quot;${params.STATUS}&quot;)]
                build job: &apos;OMERO-matlab-build&apos;
            }
        }

        stage(&quot;OMERO Test&quot;) {
            steps {
                build job: &apos;OMERO-training&apos;, wait: false
                build job: &apos;OMERO-test-integration&apos;, propagate: false
                // build job: &apos;OMERO-robot&apos;, wait: false
            }
        }

        stage(&quot;Website&quot;) {
            steps {
                build job: &apos;WEBSITE-push&apos;, wait: false
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <disabled>false</disabled>
</flow-definition>