<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>OMERO_PY_ZIP_URL</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>web</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>rm -rf $WORKSPACE/.venv3
python3.11 -m venv $WORKSPACE/.venv3

source $WORKSPACE/.venv3/bin/activate
pip install -U pip
pip install https://github.com/glencoesoftware/zeroc-ice-py-linux-x86_64/releases/download/20240202/zeroc_ice-3.6.5-cp311-cp311-manylinux_2_28_x86_64.whl
pip install markdown
pip install omero-py omero-web  # Latest in order to stop server. NB: Re-installed from python-superbuild below</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>OMERO_DIST=$WORKSPACE/OMERO.web
export OMERODIR=$OMERO_DIST
if [ -e $OMERO_DIST ]; then
    source $WORKSPACE/.venv3/bin/activate
    omero web stop || echo &apos;not running&apos;
    sleep 5
    echo &quot;Using kill to be extra careful&quot;
    for x in $(ps aux -H | grep python3 | grep -v grep | cut -b 10-16); do
        kill $x
    done
    omero web status || echo &apos;no status&apos;
    deactivate
fi

rm -rf $HOME/static/web/
rm -rf $WORKSPACE/*</command>
    </hudson.tasks.Shell>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@722.v0662a_9b_e22a_c">
      <project>OMERO-build</project>
      <filter>src/target/OMERO.server*zip</filter>
      <target/>
      <includeBuildNumberInTargetPath>false</includeBuildNumberInTargetPath>
      <excludes/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <flatten>true</flatten>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@722.v0662a_9b_e22a_c">
      <project>OMERO-python-superbuild-build</project>
      <filter>**/*.tar.gz</filter>
      <target/>
      <includeBuildNumberInTargetPath>false</includeBuildNumberInTargetPath>
      <excludes/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <flatten>true</flatten>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@722.v0662a_9b_e22a_c">
      <project>OMERO-build-build</project>
      <filter/>
      <target/>
      <includeBuildNumberInTargetPath>false</includeBuildNumberInTargetPath>
      <excludes/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <flatten>true</flatten>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>
OMERO_DIST=$WORKSPACE/OMERO.web
export OMERODIR=$OMERO_DIST
export ZIP_FILE=$WORKSPACE/omero-blitz-VERSION-python.zip
export VERSION_PROPERTIES=$WORKSPACE/version.properties

ZIP=$(ls OMERO.server*.zip)
if [ ! -z &quot;$OMERO_PY_ZIP_URL&quot; ]
then
   rm -f $ZIP
   wget -q $OMERO_PY_ZIP_URL
   ZIP=$(basename $OMERO_PY_ZIP_URL)
fi

DIST=${ZIP%.zip}
unzip -n $ZIP ## TODO: unclear why this has dupes
rm -f $ZIP
mv $WORKSPACE/$DIST $OMERO_DIST


source $WORKSPACE/.venv3/bin/activate

source /home/settings.env

# Install omero-py, omero-web etc from OMERO-python-superbuild-build job
for x in *.tar.gz; do
  pip install $x
done

pip install build # require to build omero-iviewer to be removed when possible to install directly from github

#start-config
omero config set omero.web.application_server &apos;wsgi-tcp&apos;
omero config set omero.web.application_server.max_requests 0

omero config set omero.web.prefix $WEB_PREFIX
omero config set omero.web.static_url $WEB_PREFIX&apos;/static/&apos;
omero config set omero.web.static_root $HOME&apos;/static/web/&apos;

omero config set omero.web.session_engine &apos;django.contrib.sessions.backends.cache&apos;
omero config set omero.web.caches &apos;{&quot;default&quot;: {&quot;BACKEND&quot;: &quot;django_redis.cache.RedisCache&quot;,&quot;LOCATION&quot;: &quot;redis://redis:6379/0&quot;}}&apos;

omero config set omero.web.server_list &apos;[[&quot;omero&quot;, 4064, &quot;omero&quot;], [&quot;testintegration&quot;, 14064, &quot;testintegration&quot;]]&apos;

omero config set omero.web.application_server.host $NODE_NAME
omero config set omero.web.application_server.port 4080

omero web config nginx --http &quot;$OMERO_WEB_PORT&quot; &gt;$OMERO_DIST/nginx.conf.tmp

sudo cp $OMERO_DIST/nginx.conf.tmp $HOME/nginx/$NODE_NAME.conf

omero config set omero.web.wsgi_args -- &apos;--log-level=DEBUG --error-logfile=&apos;$OMERO_DIST&apos;/var/log/gunicorn.err&apos;

omero config set omero.web.application_server.host 0.0.0.0

# OMERO.iviewer installation
#pip install &quot;git+https://github.com/$SPACE_USER/omero-iviewer.git@$MERGE_PUSH_BRANCH#egg=omero-iviewer&amp;subdirectory=plugin&quot;
git clone -b $MERGE_PUSH_BRANCH https://github.com/$SPACE_USER/omero-iviewer.git
cd omero-iviewer/plugin
python -m build
cd dist
for x in *.tar.gz; do
    pip install -U $x # install iviewer
done

omero config append omero.web.apps &apos;&quot;omero_iviewer&quot;&apos;
omero config set omero.web.viewer.view omero_iviewer.views.index
omero config append omero.web.open_with &apos;[&quot;omero_iviewer&quot;, &quot;omero_iviewer_index&quot;, {&quot;supported_objects&quot;:[&quot;images&quot;, &quot;dataset&quot;, &quot;well&quot;], &quot;script_url&quot;: &quot;omero_iviewer/openwith.js&quot;, &quot;label&quot;: &quot;OMERO.iviewer&quot;}]&apos;

# OMERO.figure installation
pip install git+https://github.com/$SPACE_USER/omero-figure.git@$MERGE_PUSH_BRANCH#egg=omero-figure
omero config append omero.web.apps &apos;&quot;omero_figure&quot;&apos;
omero config append omero.web.ui.top_links &apos;[&quot;Figure&quot;, &quot;figure_index&quot;, {&quot;title&quot;: &quot;Open Figure in new tab&quot;, &quot;target&quot;: &quot;_blank&quot;}]&apos;
omero config append omero.web.open_with &apos;[&quot;omero_figure&quot;, &quot;new_figure&quot;, {&quot;supported_objects&quot;:[&quot;images&quot;], &quot;target&quot;: &quot;_blank&quot;, &quot;label&quot;: &quot;OMERO.figure&quot;}]&apos;


# OMERO.parade installation
pip install https://github.com/$SPACE_USER/omero-parade/archive/$MERGE_PUSH_BRANCH.tar.gz
omero config append omero.web.apps &apos;&quot;omero_parade&quot;&apos;
omero config append omero.web.ui.center_plugins &apos;[&quot;Parade&quot;, &quot;omero_parade/init.js.html&quot;, &quot;omero_parade&quot;]&apos;
omero config set omero.web.use_x_forwarded_host true
omero config set omero.web.secure_proxy_ssl_header &apos;[&quot;HTTP_X_FORWARDED_PROTO&quot;, &quot;https&quot;]&apos;


# OMERO.fpbioimage installation
pip install git+https://github.com/$SPACE_USER/omero-fpbioimage.git@$MERGE_PUSH_BRANCH#egg=omero-fpbioimage
omero config append omero.web.apps &apos;&quot;omero_fpbioimage&quot;&apos;
omero config append omero.web.open_with &apos;[&quot;omero_fpbioimage&quot;, &quot;fpbioimage_index&quot;, {&quot;script_url&quot;: &quot;fpbioimage/openwith.js&quot;, &quot;supported_objects&quot;: [&quot;image&quot;], &quot;label&quot;: &quot;FPBioimage&quot;}]&apos;

# OMERO.gallery installation
pip install git+https://github.com/$SPACE_USER/omero-gallery.git@$MERGE_PUSH_BRANCH#egg=omero-gallery
omero config append omero.web.apps &apos;&quot;omero_gallery&quot;&apos;
omero config append omero.web.ui.top_links &apos;[&quot;Gallery&quot;, &quot;webgallery_index&quot;, {&quot;title&quot;: &quot;Browse Gallery&quot;}]&apos;
omero config set omero.web.gallery.category_queries &apos;{&quot;all&quot;:{&quot;label&quot;:&quot;All Studies&quot;, &quot;index&quot;:0, &quot;query&quot;:&quot;FIRST50:Name&quot;}}&apos;

# OMERO.mapr installation
pip install git+https://github.com/$SPACE_USER/omero-mapr.git@$MERGE_PUSH_BRANCH#egg=omero-mapr
omero config append omero.web.apps &apos;&quot;omero_mapr&quot;&apos;
omero config append omero.web.mapr.config &apos;{&quot;menu&quot;: &quot;anyvalue&quot;, &quot;config&quot;:{&quot;default&quot;:[&quot;Any Value&quot;], &quot;all&quot;:[], &quot;ns&quot;:[&quot;openmicroscopy.org/omero/client/mapAnnotation&quot;], &quot;label&quot;:&quot;Any&quot;}}&apos;
omero config append omero.web.ui.top_links &apos;[&quot;Any Map Value&quot;, {&quot;viewname&quot;: &quot;maprindex_anyvalue&quot;}, {&quot;title&quot;: &quot;Search for values in any Key-Value pair&quot;}]&apos;

# OMERO.weberror installation
pip install git+https://github.com/$SPACE_USER/omero-weberror.git@$MERGE_PUSH_BRANCH#egg=omero-weberror
omero config append omero.web.apps &apos;&quot;omero_weberror&quot;&apos;

# OMERO.webtest
pip install git+https://github.com/$SPACE_USER/omero-webtest.git@$MERGE_PUSH_BRANCH#egg=omero-webtest
omero config append omero.web.apps &apos;&quot;omero_webtest&quot;&apos;

# OMERO.omero-webtagging-autotag installation
pip install omero-autotag
# Add autotag to webclient
omero config append omero.web.apps &apos;&quot;omero_autotag&quot;&apos;
# Add autotag to centre panel
omero config append omero.web.ui.center_plugins &apos;[&quot;Auto Tag&quot;, &quot;omero_autotag/auto_tag_init.js.html&quot;, &quot;auto_tag_panel&quot;]&apos;

pip install omero-tagsearch
# Add tagsearch to webclient
omero config append omero.web.apps &apos;&quot;omero_tagsearch&quot;&apos;

omero config append omero.web.ui.top_links &apos;[&quot;Tag Search&quot;, &quot;tagsearch&quot;]&apos;

# omero-web-zarr
pip install git+https://github.com/$SPACE_USER/omero-web-zarr.git@$MERGE_PUSH_BRANCH#egg=omero-web-zarr
omero config append omero.web.apps &apos;&quot;omero_web_zarr&quot;&apos;

# OMERO.signup installation
pip install git+https://github.com/$SPACE_USER/omero-signup.git@$MERGE_PUSH_BRANCH#egg=omero-signup
omero config append omero.web.apps &apos;&quot;omero_signup&quot;&apos;
omero config set omero.web.signup.admin.user &quot;root&quot;
omero config set omero.web.signup.admin.password &quot;omero&quot;
omero config set omero.web.signup.group.name &quot;signup-test&quot;
omero config set omero.web.signup.email.enabled True

# virtual microscope
pip install git+https://github.com/$SPACE_USER/omero-virtual-microscope.git@$MERGE_PUSH_BRANCH#egg=omero-virtual-microscope
omero config append omero.web.apps &apos;&quot;virtualmicroscope&quot;&apos;
omero config set omero.web.login_redirect &apos;{&quot;redirect&quot;: [&quot;webindex&quot;], &quot;viewname&quot;: &quot;webindex_custom&quot;}&apos;


# CORS
omero config append omero.web.apps &apos;&quot;corsheaders&quot;&apos;
omero config append omero.web.middleware &apos;{&quot;index&quot;: 0.5, &quot;class&quot;: &quot;corsheaders.middleware.CorsMiddleware&quot;}&apos;
omero config append omero.web.middleware &apos;{&quot;index&quot;: 10, &quot;class&quot;: &quot;corsheaders.middleware.CorsPostCsrfMiddleware&quot;}&apos;
omero config set omero.web.cors_origin_allow_all True


# Twitter testing example
omero config set omero.web.sharing.opengraph &apos;{&quot;omero&quot;:&quot;Open Microscopy&quot;}&apos;
omero config set omero.web.sharing.twitter &apos;{&quot;omero&quot;:&quot;@openmicroscopy&quot;}&apos;
omero config set omero.web.public.enabled true
omero config set omero.web.public.user public
omero config set omero.web.public.password public
omero config set omero.web.public.url_filter &apos;^/&apos;

# QA feedback configuration
omero config set omero.web.feedback.comment.enabled false
omero config set omero.web.feedback.error.enabled false

BUILD_ID=DONT_KILL_ME omero web start
omero web diagnostics

deactivate</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.9"/>
  </buildWrappers>
</project>