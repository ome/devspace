<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>OMERO_PY_ZIP_URL</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>web</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>
OMERO_DIST=$WORKSPACE/OMERO.web
if [ -e $OMERO_DIST ]; then
    if [ -e $WORKSPACE/omero-virtualenv ]; then
        source $WORKSPACE/omero-virtualenv/bin/activate
    fi

    $OMERO_DIST/bin/omero web stop || echo &apos;not running&apos;
    sleep 5
    $OMERO_DIST/bin/omero web status || echo &apos;no status&apos;
    if [ -e $WORKSPACE/omero-virtualenv ]; then
        deactivate
    fi
fi

rm -rf $HOME/static/web/
rm -rf $WORKSPACE/*
      </command>
    </hudson.tasks.Shell>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.42">
      <project>OMERO-build</project>
      <filter>src/target/OMERO.py*zip</filter>
      <target></target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <flatten>true</flatten>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.42">
      <project>OMERO-python-superbuild-build</project>
      <filter>**/omero_marshal*</filter>
      <target></target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <flatten>true</flatten>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>
OMERO_DIST=$WORKSPACE/OMERO.web
OMERO_INSTALL=/tmp/omero-install/linux

ZIP=$(ls OMERO.py*.zip)
if [ ! -z &quot;$OMERO_PY_ZIP_URL&quot; ]
then
   rm -f $ZIP
   wget -q $OMERO_PY_ZIP_URL
   ZIP=$(basename $OMERO_PY_ZIP_URL)
fi

DIST=${ZIP%.zip}
unzip $ZIP
rm -f $ZIP
mv $WORKSPACE/$DIST $OMERO_DIST

virtualenv $WORKSPACE/omero-virtualenv --system-site-packages
source $WORKSPACE/omero-virtualenv/bin/activate

source $OMERO_INSTALL/settings.env

pip install -r $OMERO_DIST/share/web/requirements-py27.txt
pip install $(ls omero_marshal*tar.gz) # Install marshal *after* requirements

#start-config
$OMERO_DIST/bin/omero config set omero.web.application_server &apos;wsgi-tcp&apos;
$OMERO_DIST/bin/omero config set omero.web.application_server.max_requests 0

$OMERO_DIST/bin/omero config set omero.web.prefix $WEB_PREFIX
$OMERO_DIST/bin/omero config set omero.web.static_url $WEB_PREFIX&apos;/static/&apos;
$OMERO_DIST/bin/omero config set omero.web.static_root $HOME&apos;/static/web/&apos;

$OMERO_DIST/bin/omero config set omero.web.secure_proxy_ssl_header &apos;[&quot;HTTP_X_FORWARDED_PROTO_WEB_PROXY&quot;, &quot;https&quot;]&apos;

$OMERO_DIST/bin/omero config set omero.web.session_engine &apos;django.contrib.sessions.backends.cache&apos;
$OMERO_DIST/bin/omero config set omero.web.caches &apos;{&quot;default&quot;: {&quot;BACKEND&quot;: &quot;django_redis.cache.RedisCache&quot;,&quot;LOCATION&quot;: &quot;redis://redis:6379/0&quot;}}&apos;

$OMERO_DIST/bin/omero config set omero.web.server_list &apos;[[&quot;omero&quot;, 4064, &quot;omero&quot;], [&quot;testintegration&quot;, 14064, &quot;testintegration&quot;]]&apos;

$OMERO_DIST/bin/omero config set omero.web.application_server.host $NODE_NAME
$OMERO_DIST/bin/omero config set omero.web.application_server.port 4080

$OMERO_DIST/bin/omero web config nginx --http &quot;$OMERO_WEB_PORT&quot; &gt;$OMERO_DIST/nginx.conf.tmp

sudo cp $OMERO_DIST/nginx.conf.tmp $HOME/nginx/$NODE_NAME.conf

$OMERO_DIST/bin/omero config set omero.web.wsgi_args -- &apos;--log-level=DEBUG --error-logfile=&apos;$OMERO_DIST&apos;/var/log/gunicorn.err&apos;

$OMERO_DIST/bin/omero config set omero.web.application_server.host 0.0.0.0

# OMERO.iviewer installation
pip install &quot;git+git://github.com/snoopycrimecop/omero-iviewer.git@$MERGE_PUSH_BRANCH#egg=omero-iviewer&amp;subdirectory=plugin&quot;
$OMERO_DIST/bin/omero config append omero.web.apps &apos;&quot;omero_iviewer&quot;&apos;
$OMERO_DIST/bin/omero config set omero.web.viewer.view omero_iviewer.views.index
$OMERO_DIST/bin/omero config append omero.web.open_with &apos;[&quot;omero_iviewer&quot;, &quot;omero_iviewer_index&quot;, {&quot;supported_objects&quot;:[&quot;images&quot;, &quot;dataset&quot;, &quot;well&quot;], &quot;script_url&quot;: &quot;omero_iviewer/openwith.js&quot;, &quot;label&quot;: &quot;OMERO.iviewer&quot;}]&apos;

# OMERO.figure installation
pip install git+git://github.com/snoopycrimecop/omero-figure.git@$MERGE_PUSH_BRANCH#egg=omero-figure
$OMERO_DIST/bin/omero config append omero.web.apps &apos;&quot;omero_figure&quot;&apos;
$OMERO_DIST/bin/omero config append omero.web.ui.top_links &apos;[&quot;Figure&quot;, &quot;figure_index&quot;, {&quot;title&quot;: &quot;Open Figure in new tab&quot;, &quot;target&quot;: &quot;_blank&quot;}]&apos;
$OMERO_DIST/bin/omero config append omero.web.open_with &apos;[&quot;omero_figure&quot;, &quot;new_figure&quot;, {&quot;supported_objects&quot;:[&quot;images&quot;], &quot;target&quot;: &quot;_blank&quot;, &quot;label&quot;: &quot;OMERO.figure&quot;}]&apos;

# OMERO.fpbioimage installation
pip install git+git://github.com/snoopycrimecop/omero-fpbioimage.git@$MERGE_PUSH_BRANCH#egg=omero-fpbioimage
$OMERO_DIST/bin/omero config append omero.web.apps &apos;&quot;omero_fpbioimage&quot;&apos;
$OMERO_DIST/bin/omero config append omero.web.open_with &apos;[&quot;omero_fpbioimage&quot;, &quot;fpbioimage_index&quot;, {&quot;script_url&quot;: &quot;fpbioimage/openwith.js&quot;, &quot;supported_objects&quot;: [&quot;image&quot;], &quot;label&quot;: &quot;FPBioimage&quot;}]&apos;

# OMERO.gallery installation
pip install git+git://github.com/snoopycrimecop/omero-gallery.git@$MERGE_PUSH_BRANCH#egg=omero-gallery
$OMERO_DIST/bin/omero config append omero.web.apps &apos;&quot;omero_gallery&quot;&apos;
$OMERO_DIST/bin/omero config append omero.web.ui.top_links &apos;[&quot;Gallery&quot;, &quot;webgallery_index&quot;, {&quot;title&quot;: &quot;Browse Gallery&quot;}]&apos;
$OMERO_DIST/bin/omero config set omero.web.gallery.category_queries &apos;{&quot;all&quot;:{&quot;label&quot;:&quot;All Studies&quot;, &quot;index&quot;:0, &quot;query&quot;:&quot;FIRST50:Name&quot;}}&apos;

# OMERO.parade installation
pip install git+git://github.com/snoopycrimecop/omero-parade.git@$MERGE_PUSH_BRANCH#egg=omero-parade
$OMERO_DIST/bin/omero config append omero.web.apps &apos;&quot;omero_parade&quot;&apos;
$OMERO_DIST/bin/omero config append omero.web.ui.center_plugins &apos;[&quot;Parade&quot;, &quot;omero_parade/init.js.html&quot;, &quot;omero_parade&quot;]&apos;
$OMERO_DIST/bin/omero config set omero.web.use_x_forwarded_host true
$OMERO_DIST/bin/omero config set omero.web.secure_proxy_ssl_header &apos;[&quot;HTTP_X_FORWARDED_PROTO&quot;, &quot;https&quot;]&apos;

# OMERO.weberror installation
pip install git+git://github.com/snoopycrimecop/omero-weberror.git@$MERGE_PUSH_BRANCH#egg=omero-weberror
$OMERO_DIST/bin/omero config append omero.web.apps &apos;&quot;omero_weberror&quot;&apos;

# OMERO.omero-webtagging-autotag installation
pip install omero-webtagging-autotag
$OMERO_DIST/bin/omero config append omero.web.apps &apos;&quot;omero_webtagging_autotag&quot;&apos;
$OMERO_DIST/bin/omero config append omero.web.ui.center_plugins &apos;[&quot;Auto Tag&quot;, &quot;omero_webtagging_autotag/auto_tag_init.js.html&quot;, &quot;auto_tag_panel&quot;]&apos;

# OMERO.webtagging-tagsearch installation
pip install omero-webtagging-tagsearch
$OMERO_DIST/bin/omero config append omero.web.apps &apos;&quot;omero_webtagging_tagsearch&quot;&apos;
$OMERO_DIST/bin/omero config append omero.web.ui.top_links &apos;[&quot;Tag Search&quot;, &quot;tagsearch&quot;]&apos;

# Twitter testing example
$OMERO_DIST/bin/omero config set omero.web.sharing.opengraph &apos;{&quot;omero&quot;:&quot;Open Microscopy&quot;}&apos;
$OMERO_DIST/bin/omero config set omero.web.sharing.twitter &apos;{&quot;omero&quot;:&quot;@openmicroscopy&quot;}&apos;
$OMERO_DIST/bin/omero config set omero.web.public.enabled true
$OMERO_DIST/bin/omero config set omero.web.public.user public
$OMERO_DIST/bin/omero config set omero.web.public.password public
$OMERO_DIST/bin/omero config set omero.web.public.url_filter &apos;^/&apos;

# QA feedback configuration
$OMERO_DIST/bin/omero config set omero.web.feedback.comment.enabled false
$OMERO_DIST/bin/omero config set omero.web.feedback.error.enabled false

BUILD_ID=DONT_KILL_ME $OMERO_DIST/bin/omero web start
$OMERO_DIST/bin/omero web diagnostics

deactivate
      </command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.9"/>
  </buildWrappers>
</project>
