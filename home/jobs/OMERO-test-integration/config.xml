<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>For more info, see the &lt;a href=&quot;https://github.com/ome/devspace#job-workflow&quot;/&gt;Job workflow&lt;/a&gt;.</description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>testintegration</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>rm -rf $WORKSPACE/.venv3
python3.11 -m venv $WORKSPACE/.venv3

source $WORKSPACE/.venv3/bin/activate
pip install -U pip setuptools
pip install https://github.com/glencoesoftware/zeroc-ice-py-linux-x86_64/releases/download/20240202/zeroc_ice-3.6.5-cp311-cp311-manylinux_2_28_x86_64.whl
pip install markdown
pip install mox3 pytest pytest-django pytest-xdist pytest-mock
pip install tables
pip install jinja2
pip install PyYAML
pip install omero-py omero-web  # Latest in order to stop server.
      </command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>
source /home/settings.env
OMERO_DB_NAME=$JOB_NAME
SRC=$WORKSPACE/src
OMERO_DIST=$SRC/dist
export OMERODIR=$OMERO_DIST

if [ -e $OMERO_DIST ]; then
    source $WORKSPACE/.venv3/bin/activate
    omero admin stop || echo not running
    deactivate
    sleep 5
fi

dropdb -f -h $OMERO_DB_HOST -U $OMERO_DB_USER $OMERO_DB_NAME || echo Already exists maybe

rm -rf $WORKSPACE/*
      </command>
    </hudson.tasks.Shell>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@722.v0662a_9b_e22a_c">
      <project>OMERO-build</project>
      <filter>src/target/openmicroscopy*zip</filter>
      <target></target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <flatten>true</flatten>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@722.v0662a_9b_e22a_c">
      <project>OMERO-python-superbuild-build</project>
      <filter>**/*.tar.gz</filter>
      <target></target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <flatten>true</flatten>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@722.v0662a_9b_e22a_c">
      <project>OMERO-build-build</project>
      <filter/>
      <target/>
      <includeBuildNumberInTargetPath>false</includeBuildNumberInTargetPath>
      <excludes/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <flatten>true</flatten>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>
source /home/settings.env
export ZIP_FILE=$WORKSPACE/omero-blitz-VERSION-python.zip
export VERSION_PROPERTIES=$WORKSPACE/version.properties
OMERO_DB_NAME=$JOB_NAME
OMERO_DATA_DIR=$WORKSPACE/data

mkdir -p $OMERO_DATA_DIR

# BUILD FROM SOURCE
SRC=$WORKSPACE/src

ZIP_SRC=$(ls openmicroscopy*zip)
unzip $ZIP_SRC
rm -f $ZIP_SRC
mv $WORKSPACE/${ZIP_SRC%.zip} $SRC

# prepare virtualenv
source $WORKSPACE/.venv3/bin/activate

## Install python dependencies
for x in *.tar.gz; do
    pip install -U $x
done
pip install omero-certificates

# Cause CLI plugin tests to be run against the relevant version.
for x in omero-cli-duplicate; do
    pip install git+https://github.com/$SPACE_USER/$x.git@$MERGE_PUSH_BRANCH#egg=$x
done

## BUILD
source $SRC/docs/hudson/functions.sh
$SRC/build.py build-default test-compile

## LOAD CONFIG
OMERO_DIST=$SRC/dist
export OMERODIR=$OMERO_DIST

# TODO: LOAD EXTRA CONFIG
#omero load configfile.omero

# DEFAULT CONFIG
omero config set omero.db.name $OMERO_DB_NAME
omero config set omero.db.host $OMERO_DB_HOST
omero config set omero.db.user $OMERO_DB_USER
omero config set omero.db.poolsize 50
omero config set omero.jvmcfg.max_system_memory.blitz 64000
omero config set omero.data.dir $OMERO_DATA_DIR
omero config set omero.ports.prefix 1
omero config set omero.web.server_list &apos;[[&quot;testintegration&quot;,14064,&quot;testintegration&quot;]]&apos;
omero certificates

## END LOAD CONFIG


## PURGE

# CREATE DB
createdb -h $OMERO_DB_HOST -U $OMERO_DB_USER $OMERO_DB_NAME
omero db script -f dbsetup.sql &quot;&quot; &quot;&quot; $OMERO_ROOT_PASS
psql -h $OMERO_DB_HOST -U $OMERO_DB_USER -d $OMERO_DB_NAME -f dbsetup.sql
rm dbsetup.sql

## END PURGE


# Set up fake mail configuration
export OMERO_PROFILE=$WORKSPACE/config
mkdir -p $OMERO_PROFILE/blitz
cp $OMERO_DIST/etc/blitz/* $OMERO_PROFILE/blitz
for f in $OMERO_PROFILE/blitz/*; do mv $f $OMERO_PROFILE/blitz/`basename $f .example`.xml; done
omero config set omero.mail.config true
omero config set omero.mail.fake true
omero config set omero.mail.port 2525

# START OMERO
BUILD_ID=DONT_KILL_ME omero admin start
omero admin waitup
omero admin diagnostics

# RUN TESTS
export OMERO_SESSION_DIR=/tmp/$JOB_NAME/$BUILD_NUMBER
export ICE_CONFIG=$SRC/dist/etc/ice.config
#export PYTEST_ADDOPTS=&quot;-n16&quot;

echo Running the integration tests with -Dtestng.useDefaultListeners=true

$SRC/build.py -f components/tools/OmeroJava/build.xml -Dtestng.useDefaultListeners=true -Dtestreports.dir=target/reports/integration integration
$SRC/build.py -f components/tools/OmeroPy/build.xml integration  -Dtestreports.dir=target/reports/integration
$SRC/build.py -f components/tools/OmeroFS/build.xml integration -Dtestreports.dir=target/reports/integration
$SRC/build.py -f components/tools/OmeroWeb/build.xml integration -Dtestreports.dir=target/reports/integration

## Broken
$SRC/build.py -f components/tools/OmeroPy/build.xml integration -DMARK=broken -Dtestreports.dir=target/reports/broken
$SRC/build.py -f components/tools/OmeroJava/build.xml -Dtestng.useDefaultListeners=true -Dtestreports.dir=target/reports/broken broken

deactivate
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.junit.JUnitResultArchiver plugin="junit@1.27">
      <testResults>**/OmeroPy/target/reports/integration/*.xml,**/OmeroFS/target/reports/integration/*.xml,**/OmeroWeb/target/reports/integration/*.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <allowEmptyResults>false</allowEmptyResults>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.plugins.testng.Publisher plugin="testng-plugin@1.15">
      <reportFilenamePattern>**/OmeroJava/target/reports/integration/*.xml</reportFilenamePattern>
      <escapeTestDescp>true</escapeTestDescp>
      <escapeExceptionMsg>true</escapeExceptionMsg>
      <failureOnFailedTestConfig>false</failureOnFailedTestConfig>
      <showFailedBuilds>false</showFailedBuilds>
      <unstableSkips>100</unstableSkips>
      <unstableFails>0</unstableFails>
      <failedSkips>100</failedSkips>
      <failedFails>100</failedFails>
      <thresholdMode>2</thresholdMode>
    </hudson.plugins.testng.Publisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.9"/>
  </buildWrappers>
</project>