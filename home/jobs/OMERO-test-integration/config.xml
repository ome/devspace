<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>For more info, see the &lt;a href=&quot;https://github.com/openmicroscopy/devspace#job-workflow&quot;/&gt;Job workflow&lt;/a&gt;.</description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>testintegration</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>
OMERO_INSTALL=/tmp/omero-install/linux
source $OMERO_INSTALL/settings.env
OMERO_DB_NAME=$JOB_NAME
SRC=$WORKSPACE/src
OMERO_DIST=$SRC/dist

if [ -e $OMERO_DIST ]; then
    if [ -e $WORKSPACE/omero-virtualenv ]; then
        source $WORKSPACE/omero-virtualenv/bin/activate
    fi
    $OMERO_DIST/bin/omero admin stop || echo First build
    sleep 5
    if [ -e $WORKSPACE/omero-virtualenv ]; then
        deactivate
    fi
fi

dropdb -h $OMERO_DB_HOST -U $OMERO_DB_USER $OMERO_DB_NAME || echo Already exists maybe

rm -rf $WORKSPACE/*
      </command>
    </hudson.tasks.Shell>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.42">
      <project>OMERO-build</project>
      <filter>src/target/openmicroscopy*zip</filter>
      <target></target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <flatten>true</flatten>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>
OMERO_INSTALL=/tmp/omero-install/linux
source $OMERO_INSTALL/settings.env
OMERO_DB_NAME=$JOB_NAME
OMERO_DATA_DIR=$WORKSPACE/data

mkdir -p $OMERO_DATA_DIR

# BUILD FROM SOURCE
SRC=$WORKSPACE/src

ZIP_SRC=$(ls openmicroscopy*zip)
unzip $ZIP_SRC
rm -f $ZIP_SRC
mv $WORKSPACE/${ZIP_SRC%.zip} $SRC

# prepare virtualenv
virtualenv $WORKSPACE/omero-virtualenv --system-site-packages
source $WORKSPACE/omero-virtualenv/bin/activate
pip install -U setuptools
source $SRC/docs/hudson/functions.sh
$SRC/build.py build-default test-compile


## LOAD CONFIG
OMERO_DIST=$SRC/dist

# TODO: LOAD EXTRA CONFIG
#$OMERO_DIST/bin/omero load configfile.omero

# DEFAULT CONFIG
$OMERO_DIST/bin/omero config set omero.db.name $OMERO_DB_NAME
$OMERO_DIST/bin/omero config set omero.db.host $OMERO_DB_HOST
$OMERO_DIST/bin/omero config set omero.db.user $OMERO_DB_USER
$OMERO_DIST/bin/omero config set omero.data.dir $OMERO_DATA_DIR
$OMERO_DIST/bin/omero config set omero.ports.prefix 1
$OMERO_DIST/bin/omero config set omero.web.server_list &apos;[[&quot;testintegration&quot;,14064,&quot;testintegration&quot;]]&apos;

## END LOAD CONFIG


## PURGE

# CREATE DB
createdb -h $OMERO_DB_HOST -U $OMERO_DB_USER $OMERO_DB_NAME
$OMERO_DIST/bin/omero db script -f dbsetup.sql &quot;&quot; &quot;&quot; $OMERO_ROOT_PASS
psql -h $OMERO_DB_HOST -U $OMERO_DB_USER -d $OMERO_DB_NAME -f dbsetup.sql
rm dbsetup.sql

## END PURGE

# Install web dependencies
pip install -r $OMERO_DIST/share/web/requirements-py27-nginx.txt

# Set up fake mail configuration
export OMERO_PROFILE=$WORKSPACE/config
mkdir -p $OMERO_PROFILE/blitz
cp $OMERO_DIST/etc/blitz/* $OMERO_PROFILE/blitz
for f in $OMERO_PROFILE/blitz/*; do mv $f $OMERO_PROFILE/blitz/`basename $f .example`.xml; done
$OMERO_DIST/bin/omero config set omero.mail.config true
$OMERO_DIST/bin/omero config set omero.mail.fake true
$OMERO_DIST/bin/omero config set omero.mail.port 2525

# START OMERO
BUILD_ID=DONT_KILL_ME $OMERO_DIST/bin/omero admin start
$OMERO_DIST/bin/omero admin waitup
$OMERO_DIST/bin/omero admin diagnostics

# RUN TESTS
export OMERO_SESSION_DIR=/tmp/$JOB_NAME/$BUILD_NUMBER
export ICE_CONFIG=$SRC/dist/etc/ice.config
echo Running the integration tests with -Dtestng.useDefaultListeners=true

$SRC/build.py -f components/tools/OmeroJava/build.xml -Dtestng.useDefaultListeners=true -Dtestreports.dir=target/reports/integration integration
$SRC/build.py -f components/tools/OmeroPy/build.xml integration  -Dtestreports.dir=target/reports/integration
$SRC/build.py -f components/tools/OmeroFS/build.xml integration -Dtestreports.dir=target/reports/integration
$SRC/build.py -f components/tools/OmeroWeb/build.xml integration -Dtestreports.dir=target/reports/integration

## Broken
$SRC/build.py -f components/tools/OmeroPy/build.xml integration -DMARK=broken -Dtestreports.dir=target/reports/broken
$SRC/build.py -f components/tools/OmeroJava/build.xml -Dtestng.useDefaultListeners=true -Dtestreports.dir=target/reports/broken broken

deactivate</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.junit.JUnitResultArchiver plugin="junit@1.27">
      <testResults>**/OmeroPy/target/reports/integration/*.xml,**/OmeroFS/target/reports/integration/*.xml,**/OmeroWeb/target/reports/integration/*.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <allowEmptyResults>false</allowEmptyResults>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.plugins.testng.Publisher plugin="testng-plugin@1.15">
      <reportFilenamePattern>**/OmeroJava/target/reports/integration/*.xml</reportFilenamePattern>
      <escapeTestDescp>true</escapeTestDescp>
      <escapeExceptionMsg>true</escapeExceptionMsg>
      <failureOnFailedTestConfig>false</failureOnFailedTestConfig>
      <showFailedBuilds>false</showFailedBuilds>
      <unstableSkips>100</unstableSkips>
      <unstableFails>0</unstableFails>
      <failedSkips>100</failedSkips>
      <failedFails>100</failedFails>
      <thresholdMode>2</thresholdMode>
    </hudson.plugins.testng.Publisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.9"/>
  </buildWrappers>
</project>