<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>HOSTNAME</name>
          <description></description>
          <defaultValue>testintegration</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PORT</name>
          <description></description>
          <defaultValue>14064</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RUN_IN_PARALLEL</name>
          <description>Experimental: Run the tests in parallel using pabot</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RERUN_FAILED_TESTS</name>
          <description>Rerun the failed tests in Firefox</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>testintegration</assignedNode>
  <canRoam>false</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>rm -rf src</command>
    </hudson.tasks.Shell>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.42">
      <project>OMERO-build</project>
      <filter>src/target/openmicroscopy*zip</filter>
      <target></target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <flatten>true</flatten>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.42">
      <project>OMERO-build</project>
      <filter>src/target/OMERO.server*zip</filter>
      <target></target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <flatten>true</flatten>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>
        rm -rf $WORKSPACE/.venv3
        python -m venv $WORKSPACE/.venv3

        source $WORKSPACE/.venv3/bin/activate
        pip install https://github.com/ome/zeroc-ice-py-centos7/releases/download/0.2.1/zeroc_ice-3.6.5-cp36-cp36m-linux_x86_64.whl
        pip install -U pip future setuptools
        pip install omero-py omero-web
      </command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>SRC=$WORKSPACE/src
WEBHOST=nginx
# Setup configuration for robot job
ZIP_SRC=$(ls openmicroscopy*zip)
unzip $ZIP_SRC
rm -f $ZIP_SRC
mv $WORKSPACE/${ZIP_SRC%.zip} $SRC
OMERO_DIST=$SRC/dist
export OMERODIR=$OMERO_DIST

source $WORKSPACE/.venv3/bin/activate

pip install &quot;robotframework==4.1&quot; &quot;robotframework-selenium2library==3.0.0&quot;
pip install &quot;robotframework-pythonlibcore==3.0.0&quot; &quot;robotframework-seleniumlibrary==5.1.3&quot;

if [ &quot;$RUN_IN_PARALLEL&quot; = &quot;true&quot; ]; then
    pip install &quot;robotframework-pabot==0.43&quot;
fi

omero config set omero.web.prefix $WEB_PREFIX

mkdir $SRC/dist/etc/templates
mv $SRC/components/tests/ui/resources/robot.template $SRC/dist/etc/templates

cd $SRC/dist

bash ../components/tests/ui/robot_setup.sh
mv $SRC/dist/robot_ice.config $SRC/components/tests/ui/resources/
export ICE_CONFIG=$SRC/components/tests/ui/resources/robot_ice.config
$SRC/dist/bin/omero --path $SRC/components/tests/ui/plugins robot config --protocol http --webhost $WEBHOST --remoteurl &apos;http://seleniumhub:4444/wd/hub&apos; --dc &apos;browserName:${BROWSER},javascriptEnabled:True&apos; &gt;$SRC/components/tests/ui/resources/config.txt

sed -i.bak -re &apos;s/(\{SERVER_ID\}.*1)/\{SERVER_ID\}      2/&apos; $SRC/components/tests/ui/resources/config.txt

echo Running the UI tests

# Run the tests on Firefox then rerun failed tests in Chrome
if [ &quot;$RUN_IN_PARALLEL&quot; = &quot;true&quot; ]; then
    # Experimental see https://github.com/mkorpela/pabot/issues/93
    $SRC/build.py -f components/tests/ui/build.xml -Dtest.with.fail=false web-browser-pabot
    if [ &quot;$RERUN_FAILED_TESTS&quot; = &quot;true&quot; ]; then
        $SRC/build.py -f components/tests/ui/build.xml -Dtest.with.fail=false web-browser-rerun-pabot
        # Combines the outputs of the 2 runs
        $SRC/build.py -f components/tests/ui/build.xml merge-results-rerun
    else
        $SRC/build.py -f components/tests/ui/build.xml aggregate-results
    fi
else
    $SRC/build.py -f components/tests/ui/build.xml -Dtest.with.fail=false web-browser -DBROWSER=chrome
    if [ &quot;$RERUN_FAILED_TESTS&quot; = &quot;true&quot; ]; then
        $SRC/build.py -f components/tests/ui/build.xml -Dtest.with.fail=false web-browser-rerun -DBROWSER=chrome -DTARGETBROWSER=firefox
        $SRC/build.py -f components/tests/ui/build.xml merge-results-rerun -DBROWSER=chrome
    else
        $SRC/build.py -f components/tests/ui/build.xml aggregate-results
    fi
fi

# Run only on Firefox
# $SRC/build.py -f components/tests/ui/build.xml -Dtest.with.fail=false web-browser

# Run a single test
# $SRC/build.py -f components/tests/ui/build.xml web-browser -DTEST=view_image.txt
# Aggregate results
# $SRC/build.py -f components/tests/ui/build.xml aggregate-results



deactivate
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.robot.RobotPublisher plugin="robot@1.6.5">
      <outputPath>$WORKSPACE/src/components/tests/ui/target/reports</outputPath>
      <reportFileName>report.html</reportFileName>
      <logFileName>log.html</logFileName>
      <outputFileName>output.xml</outputFileName>
      <disableArchiveOutput>false</disableArchiveOutput>
      <passThreshold>100.0</passThreshold>
      <unstableThreshold>80.0</unstableThreshold>
      <otherFiles>
        <string></string>
      </otherFiles>
      <enableCache>true</enableCache>
      <onlyCritical>true</onlyCritical>
    </hudson.plugins.robot.RobotPublisher>
  </publishers>
  <buildWrappers/>
</project>